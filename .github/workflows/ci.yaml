name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      # Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # # âœ… Configure AWS credentials
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Run DVC pipeline
        env: 
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro

      - name: Run model tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          python -m unittest tests/test_model.py

      - name: Promote model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python scripts/promote_model.py

      - name: Run Flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/sentiment-analysis-2:latest .

      - name: push docker image to Docker Hub
        if: success()
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/sentiment-analysis-2:latest

      - name: Deploy to EC2
        if: success()
        uses: appleboy/ssh-action@v0.1.5   # through this ssh-action we can login into EC2, by providing EC2_HOST, EC2_USER, EC2_SSH_KEY, these are stored in secrets
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/sentiment-analysis-2:latest
            docker stop my-app || true   
            docker rm my-app || true     
            docker run -p 80:5000 --name my-app -e DAGSHUB_PAT=a5d1844e1e83d0f9c4a7b19c5dc4a741cf72cf65 ${{ secrets.DOCKER_HUB_USERNAME }}/sentiment-analysis-2:latest
